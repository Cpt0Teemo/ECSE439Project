/*
 * generated by Xtext 2.25.0
 */
grammar InternalWarehouseModelling;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.warehouse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.warehouse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.warehouse.services.WarehouseModellingGrammarAccess;

}
@parser::members {
	private WarehouseModellingGrammarAccess grammarAccess;

	public void setGrammarAccess(WarehouseModellingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleWarehouseManagement
entryRuleWarehouseManagement
:
{ before(grammarAccess.getWarehouseManagementRule()); }
	 ruleWarehouseManagement
{ after(grammarAccess.getWarehouseManagementRule()); } 
	 EOF 
;

// Rule WarehouseManagement
ruleWarehouseManagement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWarehouseManagementAccess().getCompaniesAssignment()); }
		(rule__WarehouseManagement__CompaniesAssignment)*
		{ after(grammarAccess.getWarehouseManagementAccess().getCompaniesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompany
entryRuleCompany
:
{ before(grammarAccess.getCompanyRule()); }
	 ruleCompany
{ after(grammarAccess.getCompanyRule()); } 
	 EOF 
;

// Rule Company
ruleCompany 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompanyAccess().getGroup()); }
		(rule__Company__Group__0)
		{ after(grammarAccess.getCompanyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWarehouse
entryRuleWarehouse
:
{ before(grammarAccess.getWarehouseRule()); }
	 ruleWarehouse
{ after(grammarAccess.getWarehouseRule()); } 
	 EOF 
;

// Rule Warehouse
ruleWarehouse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWarehouseAccess().getGroup()); }
		(rule__Warehouse__Group__0)
		{ after(grammarAccess.getWarehouseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTeam
entryRuleTeam
:
{ before(grammarAccess.getTeamRule()); }
	 ruleTeam
{ after(grammarAccess.getTeamRule()); } 
	 EOF 
;

// Rule Team
ruleTeam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTeamAccess().getGroup()); }
		(rule__Team__Group__0)
		{ after(grammarAccess.getTeamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerson
entryRulePerson
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonAccess().getGroup()); }
		(rule__Person__Group__0)
		{ after(grammarAccess.getPersonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmployee
entryRuleEmployee
:
{ before(grammarAccess.getEmployeeRule()); }
	 ruleEmployee
{ after(grammarAccess.getEmployeeRule()); } 
	 EOF 
;

// Rule Employee
ruleEmployee 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmployeeAccess().getGroup()); }
		(rule__Employee__Group__0)
		{ after(grammarAccess.getEmployeeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManager
entryRuleManager
:
{ before(grammarAccess.getManagerRule()); }
	 ruleManager
{ after(grammarAccess.getManagerRule()); } 
	 EOF 
;

// Rule Manager
ruleManager 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManagerAccess().getGroup()); }
		(rule__Manager__Group__0)
		{ after(grammarAccess.getManagerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__0__Impl
	rule__Company__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getCompanyKeyword_0()); }
	'Company'
	{ after(grammarAccess.getCompanyAccess().getCompanyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__1__Impl
	rule__Company__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getNameAssignment_1()); }
	(rule__Company__NameAssignment_1)
	{ after(grammarAccess.getCompanyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__2__Impl
	rule__Company__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getAddressAssignment_2()); }
	(rule__Company__AddressAssignment_2)
	{ after(grammarAccess.getCompanyAccess().getAddressAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__3__Impl
	rule__Company__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getWarehousesKeyword_3()); }
	'Warehouses:'
	{ after(grammarAccess.getCompanyAccess().getWarehousesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__4__Impl
	rule__Company__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getWarehousesAssignment_4()); }
	(rule__Company__WarehousesAssignment_4)*
	{ after(grammarAccess.getCompanyAccess().getWarehousesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__5__Impl
	rule__Company__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getTeamsKeyword_5()); }
	'Teams:'
	{ after(grammarAccess.getCompanyAccess().getTeamsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Company__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompanyAccess().getTeamsAssignment_6()); }
	(rule__Company__TeamsAssignment_6)*
	{ after(grammarAccess.getCompanyAccess().getTeamsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Warehouse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Warehouse__Group__0__Impl
	rule__Warehouse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWarehouseAccess().getWarehouseKeyword_0()); }
	'Warehouse'
	{ after(grammarAccess.getWarehouseAccess().getWarehouseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Warehouse__Group__1__Impl
	rule__Warehouse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWarehouseAccess().getNameAssignment_1()); }
	(rule__Warehouse__NameAssignment_1)
	{ after(grammarAccess.getWarehouseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Warehouse__Group__2__Impl
	rule__Warehouse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWarehouseAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWarehouseAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Warehouse__Group__3__Impl
	rule__Warehouse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWarehouseAccess().getWorkersAssignment_3()); }
	(rule__Warehouse__WorkersAssignment_3)*
	{ after(grammarAccess.getWarehouseAccess().getWorkersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Warehouse__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWarehouseAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getWarehouseAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Team__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Team__Group__0__Impl
	rule__Team__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamAccess().getTeamKeyword_0()); }
	'Team'
	{ after(grammarAccess.getTeamAccess().getTeamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Team__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamAccess().getIdAssignment_1()); }
	(rule__Team__IdAssignment_1)
	{ after(grammarAccess.getTeamAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__0__Impl
	rule__Person__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
	'Person'
	{ after(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getNameAssignment_1()); }
	(rule__Person__NameAssignment_1)
	{ after(grammarAccess.getPersonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__0__Impl
	rule__Employee__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getEmployeeKeyword_0()); }
	'Employee'
	{ after(grammarAccess.getEmployeeAccess().getEmployeeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__1__Impl
	rule__Employee__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getStartDateAssignment_1()); }
	(rule__Employee__StartDateAssignment_1)
	{ after(grammarAccess.getEmployeeAccess().getStartDateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getEndDateAssignment_2()); }
	(rule__Employee__EndDateAssignment_2)
	{ after(grammarAccess.getEmployeeAccess().getEndDateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manager__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__0__Impl
	rule__Manager__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getManagerKeyword_0()); }
	'Manager'
	{ after(grammarAccess.getManagerAccess().getManagerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__1__Impl
	rule__Manager__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getStartDateAssignment_1()); }
	(rule__Manager__StartDateAssignment_1)
	{ after(grammarAccess.getManagerAccess().getStartDateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__2__Impl
	rule__Manager__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getEndDateAssignment_2()); }
	(rule__Manager__EndDateAssignment_2)
	{ after(grammarAccess.getManagerAccess().getEndDateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__3__Impl
	rule__Manager__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getManagerAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manager__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getManagerAccess().getTeamKeyword_4()); }
	'team'
	{ after(grammarAccess.getManagerAccess().getTeamKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WarehouseManagement__CompaniesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWarehouseManagementAccess().getCompaniesCompanyParserRuleCall_0()); }
		ruleCompany
		{ after(grammarAccess.getWarehouseManagementAccess().getCompaniesCompanyParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__AddressAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getAddressIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCompanyAccess().getAddressIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__WarehousesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getWarehousesWarehouseParserRuleCall_4_0()); }
		ruleWarehouse
		{ after(grammarAccess.getCompanyAccess().getWarehousesWarehouseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Company__TeamsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompanyAccess().getTeamsTeamParserRuleCall_6_0()); }
		ruleTeam
		{ after(grammarAccess.getCompanyAccess().getTeamsTeamParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWarehouseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWarehouseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Warehouse__WorkersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWarehouseAccess().getWorkersPersonParserRuleCall_3_0()); }
		rulePerson
		{ after(grammarAccess.getWarehouseAccess().getWorkersPersonParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeamAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTeamAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__StartDateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getStartDateIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEmployeeAccess().getStartDateIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__EndDateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getEndDateIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEmployeeAccess().getEndDateIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__StartDateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getStartDateIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getManagerAccess().getStartDateIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manager__EndDateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManagerAccess().getEndDateIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getManagerAccess().getEndDateIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
