/*
 * generated by Xtext 2.25.0
 */
grammar InternalWarehouseModelling;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.warehouse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.warehouse.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.warehouse.services.WarehouseModellingGrammarAccess;

}

@parser::members {

 	private WarehouseModellingGrammarAccess grammarAccess;

    public InternalWarehouseModellingParser(TokenStream input, WarehouseModellingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "WarehouseManagement";
   	}

   	@Override
   	protected WarehouseModellingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWarehouseManagement
entryRuleWarehouseManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWarehouseManagementRule()); }
	iv_ruleWarehouseManagement=ruleWarehouseManagement
	{ $current=$iv_ruleWarehouseManagement.current; }
	EOF;

// Rule WarehouseManagement
ruleWarehouseManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getWarehouseManagementAccess().getCompaniesCompanyParserRuleCall_0());
			}
			lv_companies_0_0=ruleCompany
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getWarehouseManagementRule());
				}
				add(
					$current,
					"companies",
					lv_companies_0_0,
					"org.xtext.example.warehouse.WarehouseModelling.Company");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleCompany
entryRuleCompany returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompanyRule()); }
	iv_ruleCompany=ruleCompany
	{ $current=$iv_ruleCompany.current; }
	EOF;

// Rule Company
ruleCompany returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Company'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompanyAccess().getCompanyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompanyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompanyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_address_2_0=RULE_ID
				{
					newLeafNode(lv_address_2_0, grammarAccess.getCompanyAccess().getAddressIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompanyRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='Warehouses:'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompanyAccess().getWarehousesKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompanyAccess().getWarehousesWarehouseParserRuleCall_4_0());
				}
				lv_warehouses_4_0=ruleWarehouse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompanyRule());
					}
					add(
						$current,
						"warehouses",
						lv_warehouses_4_0,
						"org.xtext.example.warehouse.WarehouseModelling.Warehouse");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='Teams:'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompanyAccess().getTeamsKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompanyAccess().getTeamsTeamParserRuleCall_6_0());
				}
				lv_teams_6_0=ruleTeam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompanyRule());
					}
					add(
						$current,
						"teams",
						lv_teams_6_0,
						"org.xtext.example.warehouse.WarehouseModelling.Team");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleWarehouse
entryRuleWarehouse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWarehouseRule()); }
	iv_ruleWarehouse=ruleWarehouse
	{ $current=$iv_ruleWarehouse.current; }
	EOF;

// Rule Warehouse
ruleWarehouse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Warehouse'
		{
			newLeafNode(otherlv_0, grammarAccess.getWarehouseAccess().getWarehouseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWarehouseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWarehouseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWarehouseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWarehouseAccess().getWorkersPersonParserRuleCall_3_0());
				}
				lv_workers_3_0=rulePerson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWarehouseRule());
					}
					add(
						$current,
						"workers",
						lv_workers_3_0,
						"org.xtext.example.warehouse.WarehouseModelling.Person");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getWarehouseAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTeam
entryRuleTeam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeamRule()); }
	iv_ruleTeam=ruleTeam
	{ $current=$iv_ruleTeam.current; }
	EOF;

// Rule Team
ruleTeam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Team'
		{
			newLeafNode(otherlv_0, grammarAccess.getTeamAccess().getTeamKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getTeamAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTeamRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Person'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersonAccess().getPersonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	iv_ruleEmployee=ruleEmployee
	{ $current=$iv_ruleEmployee.current; }
	EOF;

// Rule Employee
ruleEmployee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Employee'
		{
			newLeafNode(otherlv_0, grammarAccess.getEmployeeAccess().getEmployeeKeyword_0());
		}
		(
			(
				lv_startDate_1_0=RULE_ID
				{
					newLeafNode(lv_startDate_1_0, grammarAccess.getEmployeeAccess().getStartDateIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmployeeRule());
					}
					setWithLastConsumed(
						$current,
						"startDate",
						lv_startDate_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_endDate_2_0=RULE_ID
				{
					newLeafNode(lv_endDate_2_0, grammarAccess.getEmployeeAccess().getEndDateIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmployeeRule());
					}
					setWithLastConsumed(
						$current,
						"endDate",
						lv_endDate_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleManager
entryRuleManager returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManagerRule()); }
	iv_ruleManager=ruleManager
	{ $current=$iv_ruleManager.current; }
	EOF;

// Rule Manager
ruleManager returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Manager'
		{
			newLeafNode(otherlv_0, grammarAccess.getManagerAccess().getManagerKeyword_0());
		}
		(
			(
				lv_startDate_1_0=RULE_ID
				{
					newLeafNode(lv_startDate_1_0, grammarAccess.getManagerAccess().getStartDateIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManagerRule());
					}
					setWithLastConsumed(
						$current,
						"startDate",
						lv_startDate_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_endDate_2_0=RULE_ID
				{
					newLeafNode(lv_endDate_2_0, grammarAccess.getManagerAccess().getEndDateIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManagerRule());
					}
					setWithLastConsumed(
						$current,
						"endDate",
						lv_endDate_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='of'
		{
			newLeafNode(otherlv_3, grammarAccess.getManagerAccess().getOfKeyword_3());
		}
		otherlv_4='team'
		{
			newLeafNode(otherlv_4, grammarAccess.getManagerAccess().getTeamKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
