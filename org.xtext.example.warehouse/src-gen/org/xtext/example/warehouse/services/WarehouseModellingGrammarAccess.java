/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.warehouse.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class WarehouseModellingGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class WarehouseManagementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.WarehouseManagement");
		private final Assignment cCompaniesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCompaniesCompanyParserRuleCall_0 = (RuleCall)cCompaniesAssignment.eContents().get(0);
		
		//WarehouseManagement:
		//    (companies+=Company)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(companies+=Company)*
		public Assignment getCompaniesAssignment() { return cCompaniesAssignment; }
		
		//Company
		public RuleCall getCompaniesCompanyParserRuleCall_0() { return cCompaniesCompanyParserRuleCall_0; }
	}
	public class CompanyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Company");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompanyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAddressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAddressIDTerminalRuleCall_2_0 = (RuleCall)cAddressAssignment_2.eContents().get(0);
		private final Keyword cWarehousesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWarehousesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWarehousesWarehouseParserRuleCall_4_0 = (RuleCall)cWarehousesAssignment_4.eContents().get(0);
		private final Keyword cTeamsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTeamsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTeamsTeamParserRuleCall_6_0 = (RuleCall)cTeamsAssignment_6.eContents().get(0);
		
		//Company:
		//    'Company' name=ID address=ID
		//    'Warehouses:'
		//    (warehouses+=Warehouse)*
		//    'Teams:'
		//    (teams+=Team)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Company' name=ID address=ID
		//'Warehouses:'
		//(warehouses+=Warehouse)*
		//'Teams:'
		//(teams+=Team)*
		public Group getGroup() { return cGroup; }
		
		//'Company'
		public Keyword getCompanyKeyword_0() { return cCompanyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//address=ID
		public Assignment getAddressAssignment_2() { return cAddressAssignment_2; }
		
		//ID
		public RuleCall getAddressIDTerminalRuleCall_2_0() { return cAddressIDTerminalRuleCall_2_0; }
		
		//'Warehouses:'
		public Keyword getWarehousesKeyword_3() { return cWarehousesKeyword_3; }
		
		//(warehouses+=Warehouse)*
		public Assignment getWarehousesAssignment_4() { return cWarehousesAssignment_4; }
		
		//Warehouse
		public RuleCall getWarehousesWarehouseParserRuleCall_4_0() { return cWarehousesWarehouseParserRuleCall_4_0; }
		
		//'Teams:'
		public Keyword getTeamsKeyword_5() { return cTeamsKeyword_5; }
		
		//(teams+=Team)*
		public Assignment getTeamsAssignment_6() { return cTeamsAssignment_6; }
		
		//Team
		public RuleCall getTeamsTeamParserRuleCall_6_0() { return cTeamsTeamParserRuleCall_6_0; }
	}
	public class WarehouseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Warehouse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWarehouseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWorkersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWorkersPersonParserRuleCall_3_0 = (RuleCall)cWorkersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Warehouse:
		//    'Warehouse' name=ID '{'
		//        (workers+=Person)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Warehouse' name=ID '{'
		//    (workers+=Person)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Warehouse'
		public Keyword getWarehouseKeyword_0() { return cWarehouseKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(workers+=Person)*
		public Assignment getWorkersAssignment_3() { return cWorkersAssignment_3; }
		
		//Person
		public RuleCall getWorkersPersonParserRuleCall_3_0() { return cWorkersPersonParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTeamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		
		//Team:
		//    'Team' id=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Team' id=ID
		public Group getGroup() { return cGroup; }
		
		//'Team'
		public Keyword getTeamKeyword_0() { return cTeamKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Person");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Person:
		//    'Person' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Person' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Person'
		public Keyword getPersonKeyword_0() { return cPersonKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Role");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmployeeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManagerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Role:
		//    Employee | Manager
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Employee | Manager
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Employee
		public RuleCall getEmployeeParserRuleCall_0() { return cEmployeeParserRuleCall_0; }
		
		//Manager
		public RuleCall getManagerParserRuleCall_1() { return cManagerParserRuleCall_1; }
	}
	public class EmployeeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Employee");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmployeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStartDateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartDateIDTerminalRuleCall_1_0 = (RuleCall)cStartDateAssignment_1.eContents().get(0);
		private final Assignment cEndDateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEndDateIDTerminalRuleCall_2_0 = (RuleCall)cEndDateAssignment_2.eContents().get(0);
		
		//Employee:
		//    'Employee' startDate=ID endDate=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Employee' startDate=ID endDate=ID
		public Group getGroup() { return cGroup; }
		
		//'Employee'
		public Keyword getEmployeeKeyword_0() { return cEmployeeKeyword_0; }
		
		//startDate=ID
		public Assignment getStartDateAssignment_1() { return cStartDateAssignment_1; }
		
		//ID
		public RuleCall getStartDateIDTerminalRuleCall_1_0() { return cStartDateIDTerminalRuleCall_1_0; }
		
		//endDate=ID
		public Assignment getEndDateAssignment_2() { return cEndDateAssignment_2; }
		
		//ID
		public RuleCall getEndDateIDTerminalRuleCall_2_0() { return cEndDateIDTerminalRuleCall_2_0; }
	}
	public class ManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.warehouse.WarehouseModelling.Manager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManagerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStartDateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStartDateIDTerminalRuleCall_1_0 = (RuleCall)cStartDateAssignment_1.eContents().get(0);
		private final Assignment cEndDateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEndDateIDTerminalRuleCall_2_0 = (RuleCall)cEndDateAssignment_2.eContents().get(0);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTeamKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Manager:
		//    'Manager' startDate=ID endDate=ID 'of' 'team'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Manager' startDate=ID endDate=ID 'of' 'team'
		public Group getGroup() { return cGroup; }
		
		//'Manager'
		public Keyword getManagerKeyword_0() { return cManagerKeyword_0; }
		
		//startDate=ID
		public Assignment getStartDateAssignment_1() { return cStartDateAssignment_1; }
		
		//ID
		public RuleCall getStartDateIDTerminalRuleCall_1_0() { return cStartDateIDTerminalRuleCall_1_0; }
		
		//endDate=ID
		public Assignment getEndDateAssignment_2() { return cEndDateAssignment_2; }
		
		//ID
		public RuleCall getEndDateIDTerminalRuleCall_2_0() { return cEndDateIDTerminalRuleCall_2_0; }
		
		//'of'
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }
		
		//'team'
		public Keyword getTeamKeyword_4() { return cTeamKeyword_4; }
	}
	
	
	private final WarehouseManagementElements pWarehouseManagement;
	private final CompanyElements pCompany;
	private final WarehouseElements pWarehouse;
	private final TeamElements pTeam;
	private final PersonElements pPerson;
	private final RoleElements pRole;
	private final EmployeeElements pEmployee;
	private final ManagerElements pManager;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public WarehouseModellingGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWarehouseManagement = new WarehouseManagementElements();
		this.pCompany = new CompanyElements();
		this.pWarehouse = new WarehouseElements();
		this.pTeam = new TeamElements();
		this.pPerson = new PersonElements();
		this.pRole = new RoleElements();
		this.pEmployee = new EmployeeElements();
		this.pManager = new ManagerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.warehouse.WarehouseModelling".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//WarehouseManagement:
	//    (companies+=Company)*
	//;
	public WarehouseManagementElements getWarehouseManagementAccess() {
		return pWarehouseManagement;
	}
	
	public ParserRule getWarehouseManagementRule() {
		return getWarehouseManagementAccess().getRule();
	}
	
	//Company:
	//    'Company' name=ID address=ID
	//    'Warehouses:'
	//    (warehouses+=Warehouse)*
	//    'Teams:'
	//    (teams+=Team)*
	//;
	public CompanyElements getCompanyAccess() {
		return pCompany;
	}
	
	public ParserRule getCompanyRule() {
		return getCompanyAccess().getRule();
	}
	
	//Warehouse:
	//    'Warehouse' name=ID '{'
	//        (workers+=Person)*
	//    '}'
	//;
	public WarehouseElements getWarehouseAccess() {
		return pWarehouse;
	}
	
	public ParserRule getWarehouseRule() {
		return getWarehouseAccess().getRule();
	}
	
	//Team:
	//    'Team' id=ID
	//;
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}
	
	//Person:
	//    'Person' name=ID
	//;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Role:
	//    Employee | Manager
	//;
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//Employee:
	//    'Employee' startDate=ID endDate=ID
	//;
	public EmployeeElements getEmployeeAccess() {
		return pEmployee;
	}
	
	public ParserRule getEmployeeRule() {
		return getEmployeeAccess().getRule();
	}
	
	//Manager:
	//    'Manager' startDate=ID endDate=ID 'of' 'team'
	//;
	public ManagerElements getManagerAccess() {
		return pManager;
	}
	
	public ParserRule getManagerRule() {
		return getManagerAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
