/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.warehouse.warehouseModelling.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.warehouse.warehouseModelling.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class WarehouseModellingFactoryImpl extends EFactoryImpl implements WarehouseModellingFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static WarehouseModellingFactory init()
  {
    try
    {
      WarehouseModellingFactory theWarehouseModellingFactory = (WarehouseModellingFactory)EPackage.Registry.INSTANCE.getEFactory(WarehouseModellingPackage.eNS_URI);
      if (theWarehouseModellingFactory != null)
      {
        return theWarehouseModellingFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new WarehouseModellingFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WarehouseModellingFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case WarehouseModellingPackage.WAREHOUSE_MANAGEMENT: return createWarehouseManagement();
      case WarehouseModellingPackage.COMPANY: return createCompany();
      case WarehouseModellingPackage.WAREHOUSE: return createWarehouse();
      case WarehouseModellingPackage.TEAM: return createTeam();
      case WarehouseModellingPackage.PERSON: return createPerson();
      case WarehouseModellingPackage.ROLE: return createRole();
      case WarehouseModellingPackage.EMPLOYEE: return createEmployee();
      case WarehouseModellingPackage.MANAGER: return createManager();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WarehouseManagement createWarehouseManagement()
  {
    WarehouseManagementImpl warehouseManagement = new WarehouseManagementImpl();
    return warehouseManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Company createCompany()
  {
    CompanyImpl company = new CompanyImpl();
    return company;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Warehouse createWarehouse()
  {
    WarehouseImpl warehouse = new WarehouseImpl();
    return warehouse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Team createTeam()
  {
    TeamImpl team = new TeamImpl();
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person createPerson()
  {
    PersonImpl person = new PersonImpl();
    return person;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Role createRole()
  {
    RoleImpl role = new RoleImpl();
    return role;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Employee createEmployee()
  {
    EmployeeImpl employee = new EmployeeImpl();
    return employee;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Manager createManager()
  {
    ManagerImpl manager = new ManagerImpl();
    return manager;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WarehouseModellingPackage getWarehouseModellingPackage()
  {
    return (WarehouseModellingPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static WarehouseModellingPackage getPackage()
  {
    return WarehouseModellingPackage.eINSTANCE;
  }

} //WarehouseModellingFactoryImpl
